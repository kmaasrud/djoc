name: Build release

on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]'

jobs:
  publish-to-github-linux:
    name: Publish release Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo
          ~/.rustup
          target
        key: linux-stable
    
    - name: Install dependencies
      run: sudo apt-get install -y libfontconfig1-dev libgraphite2-dev libharfbuzz-dev libicu-dev libssl-dev zlib1g-dev

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
      
    - name: Package Artifacts
      run: |
        src=$(pwd)
        stage=$(mktemp -d)
        cp target/release/mdoc $stage/
        cd $stage
        # RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        RELEASE_VERSION=0.1.0
        ASSET_NAME="mdoc-$RELEASE_VERSION-linux.tar.gz"
        ASSET_PATH="$src/$ASSET_NAME"
        CHECKSUM_PATH="$ASSET_PATH.sha256"
        echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
        echo "CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV
        tar czf $ASSET_PATH *
        cd $src
        sha256sum $ASSET_NAME > $CHECKSUM_PATH
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ env.ASSET_PATH }}
          ${{ env.CHECKSUM_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  publish-to-github-macos:
    name: Publish release MacOS
    runs-on: macos-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo
          ~/.rustup
          target
        key: macos-stable
    
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-apple-darwin
        
    - name: Install cargo-vcpkg
      run: cargo install cargo-vcpkg --force
        
    - name: Build VCPKG dependencies
      run: cargo vcpkg build
      
    - name: Set environment variables
      run: |
        echo "VCPKG_ROOT=${CARGO_TARGET_DIR:-$(pwd)/target}/vcpkg" >> $GITHUB_ENV
        echo "TECTONIC_DEP_BACKEND=vcpkg" >> $GITHUB_ENV
        
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
      
    - name: Package Artifacts
      run: |
        src=$(pwd)
        stage=$(mktemp -d -t tmp)
        cp target/release/mdoc $stage/
        cd $stage
        #RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        RELEASE_VERSION=0.1.0
        ASSET_NAME="mdoc-$RELEASE_VERSION-macos.zip"
        ASSET_PATH="$src/$ASSET_NAME"
        CHECKSUM_PATH="$ASSET_PATH.sha256"
        echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
        echo "CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV
        zip -r $ASSET_PATH *
        cd $src
        shasum -a 256 $ASSET_NAME > $CHECKSUM_PATH
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ env.ASSET_PATH }}
          ${{ env.CHECKSUM_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-github-windows:
    name: Publish release Windows
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          C:\Users\runneradmin\.cargo
          C:\Users\runneradmin\.rustup
          target
        key: windows-stable
    
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-pc-windows-msvc
        
    - name: Install cargo-vcpkg
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-vcpkg
        use-tool-cache: true
        
    - name: Build VCPKG dependencies
      run: cargo vcpkg build
      
    - name: Set environment variables
      run: |
        echo "VCPKG_ROOT=${pwd}\target\vcpkg" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "TECTONIC_DEP_BACKEND=vcpkg" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "RUSTFLAGS=-Ctarget-feature=+crt-static" |Â Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: target/release/mdoc.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
